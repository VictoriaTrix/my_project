import aiohttp
from api import CITY_URL

COUNTRIES = {
    "–†–æ—Å—Å–∏—è": "RU",
    "–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω": "KZ",
    "–°–®–ê": "US",
    "–ì–µ—Ä–º–∞–Ω–∏—è": "DE",
    "–§—Ä–∞–Ω—Ü–∏—è": "FR",
    "–ò—Ç–∞–ª–∏—è": "IT",
    "–ò—Å–ø–∞–Ω–∏—è": "ES"
}
CITIES = {}

async def get_cities(country: str):
    if country in CITIES:
        return CITIES[country]  

    country_code = COUNTRIES.get(country)
    if not country_code:
        print(f"‚ùå –û—à–∏–±–∫–∞: –°—Ç—Ä–∞–Ω–∞ '{country}' –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è.")
        return []

    params = {
        "country": country_code,
        "featureClass": "P",
        "maxRows": 1000,
        "username": "VictoriaTrix",
        "lang": "ru"
    }

    async with aiohttp.ClientSession() as session:
        try:
            async with session.get(CITY_URL, params=params) as response:
                print(f"üîç –ó–∞–ø—Ä–æ—Å: {response.url}")  
                if response.status != 200:
                    print(f"‚ùå –û—à–∏–±–∫–∞ API: {response.status}")
                    return []

                data = await response.json()
                print(f" –î–∞–Ω–Ω—ã–µ API –¥–ª—è {country}: {data}")  

                if "geonames" in data:
                    CITIES[country] = [city["name"] for city in data["geonames"]]
                    print(f"–ù–∞–π–¥–µ–Ω–æ {len(CITIES[country])} –≥–æ—Ä–æ–¥–æ–≤.")
                    return CITIES[country]
                else:
                    print("‚ö†Ô∏è –í –æ—Ç–≤–µ—Ç–µ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –≥–æ—Ä–æ–¥–∞—Ö!")
                    return []
                    
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
            return []

    return []

def get_available_countries():
    return list(COUNTRIES.keys()) 